Name: Linyun Fu

== Submission list ==

* schemeint.oz -- the Oz source code for the interpreter;
* LambdaGenerator.java -- the Java source code for the lambda expression generator that generates random lambda expressions for black-box testing;
* testcases.lst -- a list of test cases with answers for black-box testing;
* pa2.pdf -- a technical report of the project.

== How to run the program ==

* Open schemeint.oz, type in or paste some {Browse {Run <expression>}} or {Browse {RunNormal <expression>}} statements, feed the whole buffer to the Oz compiler and check the results, where <expression> is the Oz expression to be interpreted, RunNormal indicates normal order beta reduction, and Run applicative order.

== Features of the interpreter ==

* The interpreter does alpha renamings on demand, i.e., it alpha renamings the necessary part of the expression before every function application, instead of replacing all the bound variables before any beta reduction is performed;
* It supports both normal and applicative order beta reduction (try {Browse {RunNormal [lambda(y x) [lambda(x (x x)) lambda(x (x x))]]}}, it will output x);
* It passes the black-box test consisting of at least 20 randomly generated lambda expressions. It correctly evaluates identity, application, true, false and if-then-else combinators. 
